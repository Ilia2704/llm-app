name: PR Quality Checks

on:
  pull_request:
    branches: ["**"]   # запускается на любой PR
  workflow_dispatch:    # возможность запустить вручную

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install -U openai ragas datasets langchain-openai python-dotenv tqdm pandas
          fi

      # 1) RAGAS тест (твой файл run_ragas_demo_test.py).
      #    Скрипт должен завершаться кодом 1 при провале гейтов (assert/exit).
      - name: Run RAGAS test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: gpt-4o-mini
          RAGAS_EMBEDDING_MODEL: text-embedding-3-small
          USE_SIMPLE_AR: "1"
          # при необходимости можешь переопределять пороги:
          THRESH_FAITHFULNESS: "0.80"
          THRESH_ANSWER_RELEVANCY: "0.70"
          THRESH_CONTEXT_PRECISION: "0.60"
          THRESH_CONTEXT_RECALL: "0.70"
        run: |
          python run_ragas_demo_test.py

      # 2) Тест токсичности/грубости (твой файл toxic_test.py).
      #    Если скрипт сам не делает exit 1 при фейле — парсим stdout.
      - name: Run toxicity test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TOX_MODEL: gpt-4o-mini
          TOX_THRESHOLD: "0.50"
          RUDE_THRESHOLD: "0.50"
        run: |
          set -e
          python toxic_test.py | tee tox.out
          if grep -E -q "ГЕЙТ:\s*ПРОВАЛ" tox.out; then
            echo "::error::Toxicity gate failed"
            exit 1
          fi
